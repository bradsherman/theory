
M1: DFA ported from Project 1 M1
M1/M1-Accept.txt
================================

Transition Rules
----------------
Rule 1: q1, 0, ~ ==> q1, ~
Rule 2: q1, 1, ~ ==> q2, ~
Rule 3: q2, 1, ~ ==> q2, ~
Rule 4: q2, 0, ~ ==> q3, ~
Rule 5: q3, 0, ~ ==> q2, ~
Rule 6: q3, 1, ~ ==> q2, ~

String: 1
Step: 1 Rule #2: q1, 1, ~ --> q2, ~
Accepted

String: 01
Step: 1 Rule #1: q1, 0, ~ --> q1, ~
Step: 2 Rule #2: q1, 1, ~ --> q2, ~
Accepted

String: 11
Step: 1 Rule #2: q1, 1, ~ --> q2, ~
Step: 2 Rule #3: q2, 1, ~ --> q2, ~
Accepted

String: 0101010101
Step: 1 Rule #1: q1, 0, ~ --> q1, ~
Step: 2 Rule #2: q1, 1, ~ --> q2, ~
Step: 3 Rule #4: q2, 0, ~ --> q3, ~
Step: 4 Rule #6: q3, 1, ~ --> q2, ~
Step: 5 Rule #4: q2, 0, ~ --> q3, ~
Step: 6 Rule #6: q3, 1, ~ --> q2, ~
Step: 7 Rule #4: q2, 0, ~ --> q3, ~
Step: 8 Rule #6: q3, 1, ~ --> q2, ~
Step: 9 Rule #4: q2, 0, ~ --> q3, ~
Step: 10 Rule #6: q3, 1, ~ --> q2, ~
Accepted

String: 100
Step: 1 Rule #2: q1, 1, ~ --> q2, ~
Step: 2 Rule #4: q2, 0, ~ --> q3, ~
Step: 3 Rule #5: q3, 0, ~ --> q2, ~
Accepted

String: 0100
Step: 1 Rule #1: q1, 0, ~ --> q1, ~
Step: 2 Rule #2: q1, 1, ~ --> q2, ~
Step: 3 Rule #4: q2, 0, ~ --> q3, ~
Step: 4 Rule #5: q3, 0, ~ --> q2, ~
Accepted

String: 110000
Step: 1 Rule #2: q1, 1, ~ --> q2, ~
Step: 2 Rule #3: q2, 1, ~ --> q2, ~
Step: 3 Rule #4: q2, 0, ~ --> q3, ~
Step: 4 Rule #5: q3, 0, ~ --> q2, ~
Step: 5 Rule #4: q2, 0, ~ --> q3, ~
Step: 6 Rule #5: q3, 0, ~ --> q2, ~
Accepted

String: 0101000000
Step: 1 Rule #1: q1, 0, ~ --> q1, ~
Step: 2 Rule #2: q1, 1, ~ --> q2, ~
Step: 3 Rule #4: q2, 0, ~ --> q3, ~
Step: 4 Rule #6: q3, 1, ~ --> q2, ~
Step: 5 Rule #4: q2, 0, ~ --> q3, ~
Step: 6 Rule #5: q3, 0, ~ --> q2, ~
Step: 7 Rule #4: q2, 0, ~ --> q3, ~
Step: 8 Rule #5: q3, 0, ~ --> q2, ~
Step: 9 Rule #4: q2, 0, ~ --> q3, ~
Step: 10 Rule #5: q3, 0, ~ --> q2, ~
Accepted

M1: DFA ported from Project 1 M1
M1/M1-Reject.txt
================================

Transition Rules
----------------
Rule 1: q1, 0, ~ ==> q1, ~
Rule 2: q1, 1, ~ ==> q2, ~
Rule 3: q2, 1, ~ ==> q2, ~
Rule 4: q2, 0, ~ ==> q3, ~
Rule 5: q3, 0, ~ ==> q2, ~
Rule 6: q3, 1, ~ ==> q2, ~

String: 0
Step: 1 Rule #1: q1, 0, ~ --> q1, ~
Rejected

String: 010
Step: 1 Rule #1: q1, 0, ~ --> q1, ~
Step: 2 Rule #2: q1, 1, ~ --> q2, ~
Step: 3 Rule #4: q2, 0, ~ --> q3, ~
Rejected

String: 11000
Step: 1 Rule #2: q1, 1, ~ --> q2, ~
Step: 2 Rule #3: q2, 1, ~ --> q2, ~
Step: 3 Rule #4: q2, 0, ~ --> q3, ~
Step: 4 Rule #5: q3, 0, ~ --> q2, ~
Step: 5 Rule #4: q2, 0, ~ --> q3, ~
Rejected

String: 01010101010
Step: 1 Rule #1: q1, 0, ~ --> q1, ~
Step: 2 Rule #2: q1, 1, ~ --> q2, ~
Step: 3 Rule #4: q2, 0, ~ --> q3, ~
Step: 4 Rule #6: q3, 1, ~ --> q2, ~
Step: 5 Rule #4: q2, 0, ~ --> q3, ~
Step: 6 Rule #6: q3, 1, ~ --> q2, ~
Step: 7 Rule #4: q2, 0, ~ --> q3, ~
Step: 8 Rule #6: q3, 1, ~ --> q2, ~
Step: 9 Rule #4: q2, 0, ~ --> q3, ~
Step: 10 Rule #6: q3, 1, ~ --> q2, ~
Step: 11 Rule #4: q2, 0, ~ --> q3, ~
Rejected

String: 01000
Step: 1 Rule #1: q1, 0, ~ --> q1, ~
Step: 2 Rule #2: q1, 1, ~ --> q2, ~
Step: 3 Rule #4: q2, 0, ~ --> q3, ~
Step: 4 Rule #5: q3, 0, ~ --> q2, ~
Step: 5 Rule #4: q2, 0, ~ --> q3, ~
Rejected

String: 11000
Step: 1 Rule #2: q1, 1, ~ --> q2, ~
Step: 2 Rule #3: q2, 1, ~ --> q2, ~
Step: 3 Rule #4: q2, 0, ~ --> q3, ~
Step: 4 Rule #5: q3, 0, ~ --> q2, ~
Step: 5 Rule #4: q2, 0, ~ --> q3, ~
Rejected

String: 010100111000
Step: 1 Rule #1: q1, 0, ~ --> q1, ~
Step: 2 Rule #2: q1, 1, ~ --> q2, ~
Step: 3 Rule #4: q2, 0, ~ --> q3, ~
Step: 4 Rule #6: q3, 1, ~ --> q2, ~
Step: 5 Rule #4: q2, 0, ~ --> q3, ~
Step: 6 Rule #5: q3, 0, ~ --> q2, ~
Step: 7 Rule #3: q2, 1, ~ --> q2, ~
Step: 8 Rule #3: q2, 1, ~ --> q2, ~
Step: 9 Rule #3: q2, 1, ~ --> q2, ~
Step: 10 Rule #4: q2, 0, ~ --> q3, ~
Step: 11 Rule #5: q3, 0, ~ --> q2, ~
Step: 12 Rule #4: q2, 0, ~ --> q3, ~
Rejected

M2: Simple Palindrome with trapping
M2/M2-Accept.txt
===================================

Transition Rules
----------------
Rule 1: A, a, ~ ==> A, a
Rule 2: A, b, ~ ==> A, b
Rule 3: A, c, ~ ==> F, ~
Rule 4: F, a, a ==> F, ~
Rule 5: F, b, b ==> F, ~
Rule 6: F, c, ~ ==> T, ~
Rule 7: F, a, b ==> T, ~
Rule 8: F, b, a ==> T, ~

String: c
Step: 1 Rule #3: A, c, ~ --> F, ~
Accepted

String: aca
Step: 1 Rule #1: A, a, ~ --> A, a
Step: 2 Rule #3: A, c, ~ --> F, ~
Step: 3 Rule #4: F, a, a --> F, ~
Accepted

String: abcba
Step: 1 Rule #1: A, a, ~ --> A, a
Step: 2 Rule #2: A, b, ~ --> A, b
Step: 3 Rule #3: A, c, ~ --> F, ~
Step: 4 Rule #5: F, b, b --> F, ~
Step: 5 Rule #4: F, a, a --> F, ~
Accepted

String: aabbcbbaa
Step: 1 Rule #1: A, a, ~ --> A, a
Step: 2 Rule #1: A, a, ~ --> A, a
Step: 3 Rule #2: A, b, ~ --> A, b
Step: 4 Rule #2: A, b, ~ --> A, b
Step: 5 Rule #3: A, c, ~ --> F, ~
Step: 6 Rule #5: F, b, b --> F, ~
Step: 7 Rule #5: F, b, b --> F, ~
Step: 8 Rule #4: F, a, a --> F, ~
Step: 9 Rule #4: F, a, a --> F, ~
Accepted

String: abaabbcbbaaba
Step: 1 Rule #1: A, a, ~ --> A, a
Step: 2 Rule #2: A, b, ~ --> A, b
Step: 3 Rule #1: A, a, ~ --> A, a
Step: 4 Rule #1: A, a, ~ --> A, a
Step: 5 Rule #2: A, b, ~ --> A, b
Step: 6 Rule #2: A, b, ~ --> A, b
Step: 7 Rule #3: A, c, ~ --> F, ~
Step: 8 Rule #5: F, b, b --> F, ~
Step: 9 Rule #5: F, b, b --> F, ~
Step: 10 Rule #4: F, a, a --> F, ~
Step: 11 Rule #4: F, a, a --> F, ~
Step: 12 Rule #5: F, b, b --> F, ~
Step: 13 Rule #4: F, a, a --> F, ~
Accepted

M2: Simple Palindrome with trapping
M2/M2-Reject.txt
===================================

Transition Rules
----------------
Rule 1: A, a, ~ ==> A, a
Rule 2: A, b, ~ ==> A, b
Rule 3: A, c, ~ ==> F, ~
Rule 4: F, a, a ==> F, ~
Rule 5: F, b, b ==> F, ~
Rule 6: F, c, ~ ==> T, ~
Rule 7: F, a, b ==> T, ~
Rule 8: F, b, a ==> T, ~

String: abba
Step: 1 Rule #1: A, a, ~ --> A, a
Step: 2 Rule #2: A, b, ~ --> A, b
Step: 3 Rule #2: A, b, ~ --> A, b
Step: 4 Rule #1: A, a, ~ --> A, a
Rejected

String: acb
Step: 1 Rule #1: A, a, ~ --> A, a
Step: 2 Rule #3: A, c, ~ --> F, ~
Step: 3 Rule #8: F, b, a --> T, ~
Rejected

String: ac
Step: 1 Rule #1: A, a, ~ --> A, a
Step: 2 Rule #3: A, c, ~ --> F, ~
Accepted

String: ca
Step: 1 Rule #3: A, c, ~ --> F, ~
Rejected

String: bbcba
Step: 1 Rule #2: A, b, ~ --> A, b
Step: 2 Rule #2: A, b, ~ --> A, b
Step: 3 Rule #3: A, c, ~ --> F, ~
Step: 4 Rule #5: F, b, b --> F, ~
Step: 5 Rule #7: F, a, b --> T, ~
Rejected

String: baccab
Step: 1 Rule #2: A, b, ~ --> A, b
Step: 2 Rule #1: A, a, ~ --> A, a
Step: 3 Rule #3: A, c, ~ --> F, ~
Step: 4 Rule #6: F, c, ~ --> T, ~
Rejected

M2: Simple Palindrome with trapping
M2-v2/M2-Accept.txt
===================================

Transition Rules
----------------
Rule 1: A, a, ~ ==> A, a
Rule 2: A, b, ~ ==> A, b
Rule 3: A, c, ~ ==> F, ~
Rule 4: F, a, a ==> F, ~
Rule 5: F, b, b ==> F, ~
Rule 6: F, c, ~ ==> T, ~
Rule 7: F, a, b ==> T, ~
Rule 8: F, b, a ==> T, ~

String: c
Step: 1 Rule #3: A, c, ~ --> F, ~
Accepted

String: aca
Step: 1 Rule #1: A, a, ~ --> A, a
Step: 2 Rule #3: A, c, ~ --> F, ~
Step: 3 Rule #4: F, a, a --> F, ~
Accepted

String: abcba
Step: 1 Rule #1: A, a, ~ --> A, a
Step: 2 Rule #2: A, b, ~ --> A, b
Step: 3 Rule #3: A, c, ~ --> F, ~
Step: 4 Rule #5: F, b, b --> F, ~
Step: 5 Rule #4: F, a, a --> F, ~
Accepted

String: aabbcbbaa
Step: 1 Rule #1: A, a, ~ --> A, a
Step: 2 Rule #1: A, a, ~ --> A, a
Step: 3 Rule #2: A, b, ~ --> A, b
Step: 4 Rule #2: A, b, ~ --> A, b
Step: 5 Rule #3: A, c, ~ --> F, ~
Step: 6 Rule #5: F, b, b --> F, ~
Step: 7 Rule #5: F, b, b --> F, ~
Step: 8 Rule #4: F, a, a --> F, ~
Step: 9 Rule #4: F, a, a --> F, ~
Accepted

String: abaabbcbbaaba
Step: 1 Rule #1: A, a, ~ --> A, a
Step: 2 Rule #2: A, b, ~ --> A, b
Step: 3 Rule #1: A, a, ~ --> A, a
Step: 4 Rule #1: A, a, ~ --> A, a
Step: 5 Rule #2: A, b, ~ --> A, b
Step: 6 Rule #2: A, b, ~ --> A, b
Step: 7 Rule #3: A, c, ~ --> F, ~
Step: 8 Rule #5: F, b, b --> F, ~
Step: 9 Rule #5: F, b, b --> F, ~
Step: 10 Rule #4: F, a, a --> F, ~
Step: 11 Rule #4: F, a, a --> F, ~
Step: 12 Rule #5: F, b, b --> F, ~
Step: 13 Rule #4: F, a, a --> F, ~
Accepted

String: ac
Step: 1 Rule #1: A, a, ~ --> A, a
Step: 2 Rule #3: A, c, ~ --> F, ~
Accepted

M2: Simple Palindrome with trapping
M2-v2/M2-Reject.txt
===================================

Transition Rules
----------------
Rule 1: A, a, ~ ==> A, a
Rule 2: A, b, ~ ==> A, b
Rule 3: A, c, ~ ==> F, ~
Rule 4: F, a, a ==> F, ~
Rule 5: F, b, b ==> F, ~
Rule 6: F, c, ~ ==> T, ~
Rule 7: F, a, b ==> T, ~
Rule 8: F, b, a ==> T, ~

String: abba
Step: 1 Rule #1: A, a, ~ --> A, a
Step: 2 Rule #2: A, b, ~ --> A, b
Step: 3 Rule #2: A, b, ~ --> A, b
Step: 4 Rule #1: A, a, ~ --> A, a
Rejected

String: acb
Step: 1 Rule #1: A, a, ~ --> A, a
Step: 2 Rule #3: A, c, ~ --> F, ~
Step: 3 Rule #8: F, b, a --> T, ~
Rejected

String: ca
Step: 1 Rule #3: A, c, ~ --> F, ~
Rejected

String: bbcba
Step: 1 Rule #2: A, b, ~ --> A, b
Step: 2 Rule #2: A, b, ~ --> A, b
Step: 3 Rule #3: A, c, ~ --> F, ~
Step: 4 Rule #5: F, b, b --> F, ~
Step: 5 Rule #7: F, a, b --> T, ~
Rejected

String: baccab
Step: 1 Rule #2: A, b, ~ --> A, b
Step: 2 Rule #1: A, a, ~ --> A, a
Step: 3 Rule #3: A, c, ~ --> F, ~
Step: 4 Rule #6: F, c, ~ --> T, ~
Rejected

M3:Equal as and bs', with a final $
M3/M3-Accept.txt
===================================

Transition Rules
----------------
Rule 1: S, ~, ~ ==> Q, $
Rule 2: Q, a, $ ==> Q$a, $
Rule 3: Q$a, ~, ~ ==> Q, a
Rule 4: Q, a, a ==> Qa, a
Rule 5: Qa, ~, ~ ==> Q, a
Rule 6: Q, a, b ==> Q, ~
Rule 7: Q, b, $ ==> Q$b, $
Rule 8: Q$b, ~, ~ ==> Q, b
Rule 9: Q, b, a ==> Q, ~
Rule 10: Q, b, b ==> Qb, b
Rule 11: Qb, ~, ~ ==> Q, b
Rule 12: Q, $, $ ==> F, ~

String: ab$
Step: 1 Rule #1: S, ~, ~ --> Q, $
Step: 2 Rule #2: Q, a, $ --> Q$a, $
Step: 3 Rule #3: Q$a, ~, ~ --> Q, a
Step: 4 Rule #9: Q, b, a --> Q, ~
Step: 5 Rule #12: Q, $, $ --> F, ~
Accepted

String: baab$
Step: 1 Rule #1: S, ~, ~ --> Q, $
Step: 2 Rule #7: Q, b, $ --> Q$b, $
Step: 3 Rule #8: Q$b, ~, ~ --> Q, b
Step: 4 Rule #6: Q, a, b --> Q, ~
Step: 5 Rule #2: Q, a, $ --> Q$a, $
Step: 6 Rule #3: Q$a, ~, ~ --> Q, a
Step: 7 Rule #9: Q, b, a --> Q, ~
Step: 8 Rule #12: Q, $, $ --> F, ~
Accepted

String: abbbaa$
Step: 1 Rule #1: S, ~, ~ --> Q, $
Step: 2 Rule #2: Q, a, $ --> Q$a, $
Step: 3 Rule #3: Q$a, ~, ~ --> Q, a
Step: 4 Rule #9: Q, b, a --> Q, ~
Step: 5 Rule #7: Q, b, $ --> Q$b, $
Step: 6 Rule #8: Q$b, ~, ~ --> Q, b
Step: 7 Rule #10: Q, b, b --> Qb, b
Step: 8 Rule #11: Qb, ~, ~ --> Q, b
Step: 9 Rule #6: Q, a, b --> Q, ~
Step: 10 Rule #6: Q, a, b --> Q, ~
Step: 11 Rule #12: Q, $, $ --> F, ~
Accepted

String: abababab$
Step: 1 Rule #1: S, ~, ~ --> Q, $
Step: 2 Rule #2: Q, a, $ --> Q$a, $
Step: 3 Rule #3: Q$a, ~, ~ --> Q, a
Step: 4 Rule #9: Q, b, a --> Q, ~
Step: 5 Rule #2: Q, a, $ --> Q$a, $
Step: 6 Rule #3: Q$a, ~, ~ --> Q, a
Step: 7 Rule #9: Q, b, a --> Q, ~
Step: 8 Rule #2: Q, a, $ --> Q$a, $
Step: 9 Rule #3: Q$a, ~, ~ --> Q, a
Step: 10 Rule #9: Q, b, a --> Q, ~
Step: 11 Rule #2: Q, a, $ --> Q$a, $
Step: 12 Rule #3: Q$a, ~, ~ --> Q, a
Step: 13 Rule #9: Q, b, a --> Q, ~
Step: 14 Rule #12: Q, $, $ --> F, ~
Accepted

M3:Equal as and bs', with a final $
M3/M3-Reject.txt
===================================

Transition Rules
----------------
Rule 1: S, ~, ~ ==> Q, $
Rule 2: Q, a, $ ==> Q$a, $
Rule 3: Q$a, ~, ~ ==> Q, a
Rule 4: Q, a, a ==> Qa, a
Rule 5: Qa, ~, ~ ==> Q, a
Rule 6: Q, a, b ==> Q, ~
Rule 7: Q, b, $ ==> Q$b, $
Rule 8: Q$b, ~, ~ ==> Q, b
Rule 9: Q, b, a ==> Q, ~
Rule 10: Q, b, b ==> Qb, b
Rule 11: Qb, ~, ~ ==> Q, b
Rule 12: Q, $, $ ==> F, ~

String: a$
Step: 1 Rule #1: S, ~, ~ --> Q, $
Step: 2 Rule #2: Q, a, $ --> Q$a, $
Step: 3 Rule #3: Q$a, ~, ~ --> Q, a
Rejected

String: baa$
Step: 1 Rule #1: S, ~, ~ --> Q, $
Step: 2 Rule #7: Q, b, $ --> Q$b, $
Step: 3 Rule #8: Q$b, ~, ~ --> Q, b
Step: 4 Rule #6: Q, a, b --> Q, ~
Step: 5 Rule #2: Q, a, $ --> Q$a, $
Step: 6 Rule #3: Q$a, ~, ~ --> Q, a
Rejected

String: abbab$
Step: 1 Rule #1: S, ~, ~ --> Q, $
Step: 2 Rule #2: Q, a, $ --> Q$a, $
Step: 3 Rule #3: Q$a, ~, ~ --> Q, a
Step: 4 Rule #9: Q, b, a --> Q, ~
Step: 5 Rule #7: Q, b, $ --> Q$b, $
Step: 6 Rule #8: Q$b, ~, ~ --> Q, b
Step: 7 Rule #6: Q, a, b --> Q, ~
Step: 8 Rule #7: Q, b, $ --> Q$b, $
Step: 9 Rule #8: Q$b, ~, ~ --> Q, b
Rejected

String: aaabbba$
Step: 1 Rule #1: S, ~, ~ --> Q, $
Step: 2 Rule #2: Q, a, $ --> Q$a, $
Step: 3 Rule #3: Q$a, ~, ~ --> Q, a
Step: 4 Rule #4: Q, a, a --> Qa, a
Step: 5 Rule #5: Qa, ~, ~ --> Q, a
Step: 6 Rule #4: Q, a, a --> Qa, a
Step: 7 Rule #5: Qa, ~, ~ --> Q, a
Step: 8 Rule #9: Q, b, a --> Q, ~
Step: 9 Rule #9: Q, b, a --> Q, ~
Step: 10 Rule #9: Q, b, a --> Q, ~
Step: 11 Rule #2: Q, a, $ --> Q$a, $
Step: 12 Rule #3: Q$a, ~, ~ --> Q, a
Rejected

Mystery DPDA
Mystery/Mystery-test.txt
========================

Transition Rules
----------------
Rule 1: q0, ~, ~ ==> ql, $
Rule 2: ql, a, ~ ==> ql, a
Rule 3: ql, +, ~ ==> qr1, ~
Rule 4: ql, -, ~ ==> qr2, ~
Rule 5: qr1, a, ~ ==> qr1, a
Rule 6: qr1, =, ~ ==> qe1, ~
Rule 7: qe1, a, a ==> qe1, ~
Rule 8: qe1, #, $ ==> qf, ~
Rule 9: qr2, a, a ==> qr2, ~
Rule 10: qr2, a, $ ==> qr3, $
Rule 11: qr3, ~, ~ ==> qr2, b
Rule 12: qr2, a, b ==> qr3, b
Rule 13: qr2, =, ~ ==> qe2, ~
Rule 14: qe2, b, b ==> qe2, ~
Rule 15: qe2, a, a ==> qe2, ~
Rule 16: qe2, #, $ ==> qf, ~

String: a+a=aa#
Step: 1 Rule #1: q0, ~, ~ --> ql, $
Step: 2 Rule #2: ql, a, ~ --> ql, a
Step: 3 Rule #3: ql, +, ~ --> qr1, ~
Step: 4 Rule #5: qr1, a, ~ --> qr1, a
Step: 5 Rule #6: qr1, =, ~ --> qe1, ~
Step: 6 Rule #7: qe1, a, a --> qe1, ~
Step: 7 Rule #7: qe1, a, a --> qe1, ~
Step: 8 Rule #8: qe1, #, $ --> qf, ~
Accepted

String: a-a=#
Step: 1 Rule #1: q0, ~, ~ --> ql, $
Step: 2 Rule #2: ql, a, ~ --> ql, a
Step: 3 Rule #4: ql, -, ~ --> qr2, ~
Step: 4 Rule #9: qr2, a, a --> qr2, ~
Step: 5 Rule #13: qr2, =, ~ --> qe2, ~
Step: 6 Rule #16: qe2, #, $ --> qf, ~
Accepted

String: a+aa=aaa#
Step: 1 Rule #1: q0, ~, ~ --> ql, $
Step: 2 Rule #2: ql, a, ~ --> ql, a
Step: 3 Rule #3: ql, +, ~ --> qr1, ~
Step: 4 Rule #5: qr1, a, ~ --> qr1, a
Step: 5 Rule #5: qr1, a, ~ --> qr1, a
Step: 6 Rule #6: qr1, =, ~ --> qe1, ~
Step: 7 Rule #7: qe1, a, a --> qe1, ~
Step: 8 Rule #7: qe1, a, a --> qe1, ~
Step: 9 Rule #7: qe1, a, a --> qe1, ~
Step: 10 Rule #8: qe1, #, $ --> qf, ~
Accepted

String: a-aa=b#
Step: 1 Rule #1: q0, ~, ~ --> ql, $
Step: 2 Rule #2: ql, a, ~ --> ql, a
Step: 3 Rule #4: ql, -, ~ --> qr2, ~
Step: 4 Rule #9: qr2, a, a --> qr2, ~
Step: 5 Rule #10: qr2, a, $ --> qr3, $
Step: 6 Rule #11: qr3, ~, ~ --> qr2, b
Step: 7 Rule #13: qr2, =, ~ --> qe2, ~
Step: 8 Rule #14: qe2, b, b --> qe2, ~
Step: 9 Rule #16: qe2, #, $ --> qf, ~
Accepted

String: aaa+aa=aaaaa@
Step: 1 Rule #1: q0, ~, ~ --> ql, $
Step: 2 Rule #2: ql, a, ~ --> ql, a
Step: 3 Rule #2: ql, a, ~ --> ql, a
Step: 4 Rule #2: ql, a, ~ --> ql, a
Step: 5 Rule #3: ql, +, ~ --> qr1, ~
Step: 6 Rule #5: qr1, a, ~ --> qr1, a
Step: 7 Rule #5: qr1, a, ~ --> qr1, a
Step: 8 Rule #6: qr1, =, ~ --> qe1, ~
Step: 9 Rule #7: qe1, a, a --> qe1, ~
Step: 10 Rule #7: qe1, a, a --> qe1, ~
Step: 11 Rule #7: qe1, a, a --> qe1, ~
Step: 12 Rule #7: qe1, a, a --> qe1, ~
Step: 13 Rule #7: qe1, a, a --> qe1, ~
Rejected

String: aaa-aa=a#
Step: 1 Rule #1: q0, ~, ~ --> ql, $
Step: 2 Rule #2: ql, a, ~ --> ql, a
Step: 3 Rule #2: ql, a, ~ --> ql, a
Step: 4 Rule #2: ql, a, ~ --> ql, a
Step: 5 Rule #4: ql, -, ~ --> qr2, ~
Step: 6 Rule #9: qr2, a, a --> qr2, ~
Step: 7 Rule #9: qr2, a, a --> qr2, ~
Step: 8 Rule #13: qr2, =, ~ --> qe2, ~
Step: 9 Rule #15: qe2, a, a --> qe2, ~
Step: 10 Rule #16: qe2, #, $ --> qf, ~
Accepted

String: aa-aaaa=bb#
Step: 1 Rule #1: q0, ~, ~ --> ql, $
Step: 2 Rule #2: ql, a, ~ --> ql, a
Step: 3 Rule #2: ql, a, ~ --> ql, a
Step: 4 Rule #4: ql, -, ~ --> qr2, ~
Step: 5 Rule #9: qr2, a, a --> qr2, ~
Step: 6 Rule #9: qr2, a, a --> qr2, ~
Step: 7 Rule #10: qr2, a, $ --> qr3, $
Step: 8 Rule #11: qr3, ~, ~ --> qr2, b
Step: 9 Rule #12: qr2, a, b --> qr3, b
Step: 10 Rule #11: qr3, ~, ~ --> qr2, b
Step: 11 Rule #13: qr2, =, ~ --> qe2, ~
Step: 12 Rule #14: qe2, b, b --> qe2, ~
Step: 13 Rule #14: qe2, b, b --> qe2, ~
Step: 14 Rule #16: qe2, #, $ --> qf, ~
Accepted

String: aaa+=aaa#
Step: 1 Rule #1: q0, ~, ~ --> ql, $
Step: 2 Rule #2: ql, a, ~ --> ql, a
Step: 3 Rule #2: ql, a, ~ --> ql, a
Step: 4 Rule #2: ql, a, ~ --> ql, a
Step: 5 Rule #3: ql, +, ~ --> qr1, ~
Step: 6 Rule #6: qr1, =, ~ --> qe1, ~
Step: 7 Rule #7: qe1, a, a --> qe1, ~
Step: 8 Rule #7: qe1, a, a --> qe1, ~
Step: 9 Rule #7: qe1, a, a --> qe1, ~
Step: 10 Rule #8: qe1, #, $ --> qf, ~
Accepted

String: +aaa=aaa#
Step: 1 Rule #1: q0, ~, ~ --> ql, $
Step: 2 Rule #3: ql, +, ~ --> qr1, ~
Step: 3 Rule #5: qr1, a, ~ --> qr1, a
Step: 4 Rule #5: qr1, a, ~ --> qr1, a
Step: 5 Rule #5: qr1, a, ~ --> qr1, a
Step: 6 Rule #6: qr1, =, ~ --> qe1, ~
Step: 7 Rule #7: qe1, a, a --> qe1, ~
Step: 8 Rule #7: qe1, a, a --> qe1, ~
Step: 9 Rule #7: qe1, a, a --> qe1, ~
Step: 10 Rule #8: qe1, #, $ --> qf, ~
Accepted

String: -aaa=bbb#
Step: 1 Rule #1: q0, ~, ~ --> ql, $
Step: 2 Rule #4: ql, -, ~ --> qr2, ~
Step: 3 Rule #10: qr2, a, $ --> qr3, $
Step: 4 Rule #11: qr3, ~, ~ --> qr2, b
Step: 5 Rule #12: qr2, a, b --> qr3, b
Step: 6 Rule #11: qr3, ~, ~ --> qr2, b
Step: 7 Rule #12: qr2, a, b --> qr3, b
Step: 8 Rule #11: qr3, ~, ~ --> qr2, b
Step: 9 Rule #13: qr2, =, ~ --> qe2, ~
Step: 10 Rule #14: qe2, b, b --> qe2, ~
Step: 11 Rule #14: qe2, b, b --> qe2, ~
Step: 12 Rule #14: qe2, b, b --> qe2, ~
Step: 13 Rule #16: qe2, #, $ --> qf, ~
Accepted

String: a+=a#
Step: 1 Rule #1: q0, ~, ~ --> ql, $
Step: 2 Rule #2: ql, a, ~ --> ql, a
Step: 3 Rule #3: ql, +, ~ --> qr1, ~
Step: 4 Rule #6: qr1, =, ~ --> qe1, ~
Step: 5 Rule #7: qe1, a, a --> qe1, ~
Step: 6 Rule #8: qe1, #, $ --> qf, ~
Accepted

String: a-=a#
Step: 1 Rule #1: q0, ~, ~ --> ql, $
Step: 2 Rule #2: ql, a, ~ --> ql, a
Step: 3 Rule #4: ql, -, ~ --> qr2, ~
Step: 4 Rule #13: qr2, =, ~ --> qe2, ~
Step: 5 Rule #15: qe2, a, a --> qe2, ~
Step: 6 Rule #16: qe2, #, $ --> qf, ~
Accepted

String: +aa=bb#
Step: 1 Rule #1: q0, ~, ~ --> ql, $
Step: 2 Rule #3: ql, +, ~ --> qr1, ~
Step: 3 Rule #5: qr1, a, ~ --> qr1, a
Step: 4 Rule #5: qr1, a, ~ --> qr1, a
Step: 5 Rule #6: qr1, =, ~ --> qe1, ~
Rejected

String: aa=aa#
Step: 1 Rule #1: q0, ~, ~ --> ql, $
Step: 2 Rule #2: ql, a, ~ --> ql, a
Step: 3 Rule #2: ql, a, ~ --> ql, a
Rejected

String: aa+a=bbb#
Step: 1 Rule #1: q0, ~, ~ --> ql, $
Step: 2 Rule #2: ql, a, ~ --> ql, a
Step: 3 Rule #2: ql, a, ~ --> ql, a
Step: 4 Rule #3: ql, +, ~ --> qr1, ~
Step: 5 Rule #5: qr1, a, ~ --> qr1, a
Step: 6 Rule #6: qr1, =, ~ --> qe1, ~
Rejected

String: a-aa=a#
Step: 1 Rule #1: q0, ~, ~ --> ql, $
Step: 2 Rule #2: ql, a, ~ --> ql, a
Step: 3 Rule #4: ql, -, ~ --> qr2, ~
Step: 4 Rule #9: qr2, a, a --> qr2, ~
Step: 5 Rule #10: qr2, a, $ --> qr3, $
Step: 6 Rule #11: qr3, ~, ~ --> qr2, b
Step: 7 Rule #13: qr2, =, ~ --> qe2, ~
Rejected

String: a+aa=aaa
Step: 1 Rule #1: q0, ~, ~ --> ql, $
Step: 2 Rule #2: ql, a, ~ --> ql, a
Step: 3 Rule #3: ql, +, ~ --> qr1, ~
Step: 4 Rule #5: qr1, a, ~ --> qr1, a
Step: 5 Rule #5: qr1, a, ~ --> qr1, a
Step: 6 Rule #6: qr1, =, ~ --> qe1, ~
Step: 7 Rule #7: qe1, a, a --> qe1, ~
Step: 8 Rule #7: qe1, a, a --> qe1, ~
Step: 9 Rule #7: qe1, a, a --> qe1, ~
Rejected

String: a-aa#
Step: 1 Rule #1: q0, ~, ~ --> ql, $
Step: 2 Rule #2: ql, a, ~ --> ql, a
Step: 3 Rule #4: ql, -, ~ --> qr2, ~
Step: 4 Rule #9: qr2, a, a --> qr2, ~
Step: 5 Rule #10: qr2, a, $ --> qr3, $
Step: 6 Rule #11: qr3, ~, ~ --> qr2, b
Rejected

String: =a+aa=aaa#
Step: 1 Rule #1: q0, ~, ~ --> ql, $
Rejected

String: aaa+b=aa#
Step: 1 Rule #1: q0, ~, ~ --> ql, $
Step: 2 Rule #2: ql, a, ~ --> ql, a
Step: 3 Rule #2: ql, a, ~ --> ql, a
Step: 4 Rule #2: ql, a, ~ --> ql, a
Step: 5 Rule #3: ql, +, ~ --> qr1, ~
Rejected

My Machine (one or more (01)'s followed by a 2)
MyMachine/MyMachine-Accept.txt
===============================================

Transition Rules
----------------
Rule 1: q1, 0, ~ ==> q2, 0
Rule 2: q2, 1, 0 ==> q3, 1
Rule 3: q3, 0, 1 ==> q2, 0
Rule 4: q3, 2, 1 ==> q4, ~

String: 012
Step: 1 Rule #1: q1, 0, ~ --> q2, 0
Step: 2 Rule #2: q2, 1, 0 --> q3, 1
Step: 3 Rule #4: q3, 2, 1 --> q4, ~
Accepted

String: 01012
Step: 1 Rule #1: q1, 0, ~ --> q2, 0
Step: 2 Rule #2: q2, 1, 0 --> q3, 1
Step: 3 Rule #3: q3, 0, 1 --> q2, 0
Step: 4 Rule #2: q2, 1, 0 --> q3, 1
Step: 5 Rule #4: q3, 2, 1 --> q4, ~
Accepted

String: 010101012
Step: 1 Rule #1: q1, 0, ~ --> q2, 0
Step: 2 Rule #2: q2, 1, 0 --> q3, 1
Step: 3 Rule #3: q3, 0, 1 --> q2, 0
Step: 4 Rule #2: q2, 1, 0 --> q3, 1
Step: 5 Rule #3: q3, 0, 1 --> q2, 0
Step: 6 Rule #2: q2, 1, 0 --> q3, 1
Step: 7 Rule #3: q3, 0, 1 --> q2, 0
Step: 8 Rule #2: q2, 1, 0 --> q3, 1
Step: 9 Rule #4: q3, 2, 1 --> q4, ~
Accepted

String: 0101010101012
Step: 1 Rule #1: q1, 0, ~ --> q2, 0
Step: 2 Rule #2: q2, 1, 0 --> q3, 1
Step: 3 Rule #3: q3, 0, 1 --> q2, 0
Step: 4 Rule #2: q2, 1, 0 --> q3, 1
Step: 5 Rule #3: q3, 0, 1 --> q2, 0
Step: 6 Rule #2: q2, 1, 0 --> q3, 1
Step: 7 Rule #3: q3, 0, 1 --> q2, 0
Step: 8 Rule #2: q2, 1, 0 --> q3, 1
Step: 9 Rule #3: q3, 0, 1 --> q2, 0
Step: 10 Rule #2: q2, 1, 0 --> q3, 1
Step: 11 Rule #3: q3, 0, 1 --> q2, 0
Step: 12 Rule #2: q2, 1, 0 --> q3, 1
Step: 13 Rule #4: q3, 2, 1 --> q4, ~
Accepted

My Machine (one or more (01)'s followed by a 2)
MyMachine/MyMachine-Reject.txt
===============================================

Transition Rules
----------------
Rule 1: q1, 0, ~ ==> q2, 0
Rule 2: q2, 1, 0 ==> q3, 1
Rule 3: q3, 0, 1 ==> q2, 0
Rule 4: q3, 2, 1 ==> q4, ~

String: 12
Rejected

String: 02
Step: 1 Rule #1: q1, 0, ~ --> q2, 0
Rejected

String: 102
Rejected

String: 101012
Rejected

String: 010112
Step: 1 Rule #1: q1, 0, ~ --> q2, 0
Step: 2 Rule #2: q2, 1, 0 --> q3, 1
Step: 3 Rule #3: q3, 0, 1 --> q2, 0
Step: 4 Rule #2: q2, 1, 0 --> q3, 1
Rejected

String: 010012
Step: 1 Rule #1: q1, 0, ~ --> q2, 0
Step: 2 Rule #2: q2, 1, 0 --> q3, 1
Step: 3 Rule #3: q3, 0, 1 --> q2, 0
Rejected
